services:
  frontend:
    build: 
      context: ./frontend
      args:
          PET_API: "http://pet-service:5000/pets"
          USER_API: "http://user-service:5000/users"
    ports:
      - "8080:80"
    networks:
      - petdopt_net
    depends_on:
      - pet-service
      - user-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3


  pet-service:
    build: 
      context: ./pet-service
      args:
          DB_HOST: db
          DB_PORT: 5432
          DB_NAME: petdopt
          DB_USER: postgres
          DB_PASSWORD: postgres
    ports:
      - "5001:5000"
    networks:
      - petdopt_net
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=petdopt
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - pet_uploads:/app/uploads

  user-service:
    build: 
      context: ./user-service
      args:
          DB_HOST: db
          DB_PORT: 5432
          DB_NAME: petdopt
          DB_USER: postgres
          DB_PASSWORD: postgres
    ports:
      - "5002:5000"
    networks:
      - petdopt_net
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=petdopt
      - DB_USER=postgres
      - DB_PASSWORD=postgres

  db:
    image: postgres:15
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      POSTGRES_DB: petdopt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - petdopt_net
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/keycloak/data/import/realm-export.json
    volumes:
      - ./keycloak-config/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8081:8080"
    networks:
      - petdopt_net
    restart: unless-stopped


networks:
  petdopt_net:
    driver: bridge

volumes:
  pgdata:
  pet_uploads:
